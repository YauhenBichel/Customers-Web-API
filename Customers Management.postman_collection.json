{
	"info": {
		"_postman_id": "6bf30c96-53ce-4b9f-9c5e-3553e10b372f",
		"name": "Customers Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "3051943"
	},
	"item": [
		{
			"name": "get customer by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:5091/api/CustomerManagement/1"
			},
			"response": []
		},
		{
			"name": "patch customer: in-active",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[     \n    {       \n       \"op\": \"replace\",       \n       \"path\": \"/InActive\",       \n       \"value\": true\n    } \n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5033/api/CustomerManagement/1"
			},
			"response": []
		},
		{
			"name": "delete customer by id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:5033/api/CustomerManagement/1"
			},
			"response": []
		},
		{
			"name": "get all customers",
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:5033/api/CustomerManagement"
			},
			"response": []
		},
		{
			"name": "get all in-active customers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5033/api/CustomerManagement?activeOnly=true",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5033",
					"path": [
						"api",
						"CustomerManagement"
					],
					"query": [
						{
							"key": "activeOnly",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create customer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"{{randomStringMax20}}\",\n  \"forename\": \"{{randomStringMax50}}\",\n  \"surname\": \"{{randomStringMax50}}\",\n  \"emailAdress\": \"{{randomStringMax75}}\",\n  \"mobileNo\": \"{{randomStringMax15}}\",\n  \"inActive\": false,\n  \"addresses\": [\n    {\n      \"addressLine1\": \"{{randomStringMax80}}\",\n      \"addressLine2\": \"{{randomStringMax80}}\",\n      \"town\": \"{{randomStringMax50}}\",\n      \"country\": \"{{randomStringMax50}}\",\n      \"postcode\": \"{{randomStringMax10}}\"\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5033/api/CustomerManagement"
			},
			"response": []
		},
		{
			"name": "try to create customer without address",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"{{randomStringMax20}}\",\n  \"forename\": \"{{randomStringMax50}}\",\n  \"surname\": \"{{randomStringMax50}}\",\n  \"emailAdress\": \"{{randomStringMax75}}\",\n  \"mobileNo\": \"{{randomStringMax15}}\",\n  \"inActive\": false,\n  \"addresses\": [\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5033/api/CustomerManagement"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {",
					"    if (!minValue) {",
					"        minValue = 20;",
					"        maxValue = 20;",
					"    }",
					"",
					"    if (!maxValue) {",
					"        maxValue = minValue;",
					"    }",
					"",
					"    let length = _.random(minValue, maxValue),",
					"        randomString = \"\";",
					"",
					"    for (let i = 0; i < length; i++)",
					"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));",
					"    return randomString;",
					"}",
					"",
					"pm.variables.set('randomStringMax10', randomString(10,10));",
					"pm.variables.set('randomStringMax15', randomString(15,15));",
					"pm.variables.set('randomStringMax20', randomString(20,20));",
					"pm.variables.set('randomStringMax50', randomString(50,50));",
					"pm.variables.set('randomStringMax75', randomString(75,75));",
					"pm.variables.set('randomStringMax80', randomString(80,80));",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}